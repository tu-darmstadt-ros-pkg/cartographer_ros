<launch>

  <arg name="bag_filenames"/>
  <arg name="no_rviz" default="false"/>
  <arg name="rviz_config" default="$(find cartographer_ros)/configuration_files/evaluation_2d_new.rviz"/>
  <arg name="configuration_directory" default="$(find cartographer_ros)/configuration_files"/>
  <arg name="configuration_basenames" default="smoke_2d.lua"/>
  <!-- <arg name="urdf_filenames" default="$(find smoke_navigation_module_description)/urdf/smoke_navigation_module.urdf"/> -->
  <arg name="urdf_filenames" default="$(find asterix_description)/urdf/asterix_ugv.urdf"/>
  <arg name="launch_prefix" default=""/>

  <!-- Remaps for IMU, Odometry and LiDAR: -->
  <!-- <remap from="/imu" to="/imu/data" /> -->
  <remap from="/imu" to="/imu/xsens/data" />
  <!-- <remap from="/odom" to="/odom_raw" /> -->
  <remap from="/scan" to="/lidar/scan" />

  <!-- Remaps for related Work: -->
  <!-- <remap from="/scan" to="/robot1/laserscan" /> -->
  <!-- <remap from="/scan" to="/mpr_scan" /> -->
  <!-- <remap from="/odom" to="/robot1/vmc_navserver/odom" /> -->


  <remap from="/points2" to="/radar_filter/radar_pcl_gnc" />
  <!-- <remap from="/points2" to="/dca_1000/adc_data" /> -->
  

  <include file="$(find cartographer_ros)/launch/offline_node.launch">
    <arg name="bag_filenames" value="$(arg bag_filenames)"/>
    <arg name="no_rviz" value="$(arg no_rviz)"/>
    <arg name="rviz_config" value="$(arg rviz_config)"/>
    <arg name="configuration_directory" value="$(arg configuration_directory)"/>
    <arg name="configuration_basenames" value="$(arg configuration_basenames)"/>
    <arg name="urdf_filenames" value="$(arg urdf_filenames)"/>
    <arg name="launch_prefix" value="$(arg launch_prefix)"/>
  </include>

  <!-- Collect trajectory for evaluation when finished, python version with pickle -->
  <!-- <node name="pickle_trajectory" pkg="radar_filter" type="collect_trajectory.py" -->
      <!-- args="$(arg bag_filenames)" /> -->
  <!-- Publish Ground truth trajectory -->
  <!-- <node name="gt_trajectory_old" pkg="radar_filter" type="pub_marker_array.py" -->
      <!-- args="$(arg bag_filenames)" /> -->

  <!-- Display GT Trajectory from "gt_{bag_filenames}.pbstream_poses" file and create a "{bag_filenames}.pbstream_poses" file: -->
  <node name="gt_trajectory" pkg="cartographer_ros" type="save_and_pub_gt_trajectory"
      args="-pose_graph_filename $(arg bag_filenames)" />

</launch>
